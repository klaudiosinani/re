pre.highlight {
  font-family: "JetBrains Mono", monospace !important;
  background: var(--codeblock-color-background) !important;
  color: var(--codeblock-color-text) !important;
  border-color: rgb(var(--color-border)) !important;
  border-radius: 0.25rem;
  overflow: auto;
  font-size: 1em;
  line-height: 1.5;
  display: block;
  width: 100%;
}
/* Apply Dark Theme */
html[data-theme="dark"] pre.highlight {
  background: var(--codeblock-color-background) !important;
  color: var(--codeblock-color-text) !important;
  border-color: rgb(var(--color-border)) !important;
}
pre.highlight span {
  color: var(--codeblock-color-text);
}
html[data-theme="dark"] pre.highlight span {
  color: var(--codeblock-color-text);
}
/* Keywords */
pre.highlight .k,
pre.highlight .kd,
pre.highlight .kn,
pre.highlight .kp,
pre.highlight .kr,
pre.highlight .kt {
  color: var(--codeblock-token-keyword);
}
html[data-theme="dark"] pre.highlight .k,
html[data-theme="dark"] pre.highlight .kd,
html[data-theme="dark"] pre.highlight .kn,
html[data-theme="dark"] pre.highlight .kp,
html[data-theme="dark"] pre.highlight .kr,
html[data-theme="dark"] pre.highlight .kt {
  color: var(--codeblock-token-keyword);
}
/* Strings */
pre.highlight .s,
pre.highlight .sa,
pre.highlight .sb,
pre.highlight .sc,
pre.highlight .dl,
pre.highlight .sd,
pre.highlight .s2,
pre.highlight .sh,
pre.highlight .sx,
pre.highlight .s1,
pre.highlight .sr {
  color: var(--codeblock-token-string);
}
html[data-theme="dark"] pre.highlight .s,
html[data-theme="dark"] pre.highlight .sa,
html[data-theme="dark"] pre.highlight .sb,
html[data-theme="dark"] pre.highlight .sc,
html[data-theme="dark"] pre.highlight .dl,
html[data-theme="dark"] pre.highlight .sd,
html[data-theme="dark"] pre.highlight .s2,
html[data-theme="dark"] pre.highlight .sh,
html[data-theme="dark"] pre.highlight .sx,
html[data-theme="dark"] pre.highlight .s1,
html[data-theme="dark"] pre.highlight .sr {
  color: var(--codeblock-token-string);
}
/* Numbers and constants */
pre.highlight .m,
pre.highlight .mb,
pre.highlight .mf,
pre.highlight .mh,
pre.highlight .mi,
pre.highlight .mo,
pre.highlight .il,
pre.highlight .no {
  color: var(--codeblock-token-constant);
}
html[data-theme="dark"] pre.highlight .m,
html[data-theme="dark"] pre.highlight .mb,
html[data-theme="dark"] pre.highlight .mf,
html[data-theme="dark"] pre.highlight .mh,
html[data-theme="dark"] pre.highlight .mi,
html[data-theme="dark"] pre.highlight .mo,
html[data-theme="dark"] pre.highlight .il,
html[data-theme="dark"] pre.highlight .no {
  color: var(--codeblock-token-constant);
}
/* Functions and methods */
pre.highlight .na,
pre.highlight .nb,
pre.highlight .nc,
pre.highlight .nf,
pre.highlight .fm {
  color: var(--codeblock-token-function);
}
html[data-theme="dark"] pre.highlight .na,
html[data-theme="dark"] pre.highlight .nb,
html[data-theme="dark"] pre.highlight .nc,
html[data-theme="dark"] pre.highlight .nf,
html[data-theme="dark"] pre.highlight .fm {
  color: var(--codeblock-token-function);
}
/* Comments */
pre.highlight .c,
pre.highlight .ch,
pre.highlight .cm,
pre.highlight .cp,
pre.highlight .cpf,
pre.highlight .c1,
pre.highlight .cs {
  color: var(--codeblock-token-comment);
  font-style: italic;
}
html[data-theme="dark"] pre.highlight .c,
html[data-theme="dark"] pre.highlight .ch,
html[data-theme="dark"] pre.highlight .cm,
html[data-theme="dark"] pre.highlight .cp,
html[data-theme="dark"] pre.highlight .cpf,
html[data-theme="dark"] pre.highlight .c1,
html[data-theme="dark"] pre.highlight .cs {
  color: var(--codeblock-token-comment);
}
/* Operators, punctuation */
pre.highlight .o,
pre.highlight .ow,
pre.highlight .p {
  color: var(--codeblock-token-punctuation);
}
html[data-theme="dark"] pre.highlight .o,
html[data-theme="dark"] pre.highlight .ow,
html[data-theme="dark"] pre.highlight .p {
  color: var(--codeblock-token-punctuation);
}
/* Variables */
pre.highlight .n,
pre.highlight .nv,
pre.highlight .vc,
pre.highlight .vg,
pre.highlight .vi,
pre.highlight .vm {
  color: var(--codeblock-color-text);
}
html[data-theme="dark"] pre.highlight .n,
html[data-theme="dark"] pre.highlight .nv,
html[data-theme="dark"] pre.highlight .vc,
html[data-theme="dark"] pre.highlight .vg,
html[data-theme="dark"] pre.highlight .vi,
html[data-theme="dark"] pre.highlight .vm {
  color: var(--codeblock-color-text);
}
/* Code block selection - optional override */
pre.highlight ::-moz-selection {
  background-color: rgba(var(--color-selection-bg), 0.7);
  color: rgb(var(--color-selection-text));
}
pre.highlight ::selection {
  background-color: rgba(var(--color-selection-bg), 0.7);
  color: rgb(var(--color-selection-text));
}
pre.highlight ::-moz-selection {
  background-color: rgb(var(--color-selection-bg), 0.7);
  color: rgb(var(--color-selection-text));
}
*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
/* ! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com */
/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}
::before,
::after {
  --tw-content: '';
}
/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/
html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}
/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}
/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}
/*
Remove the default font size and weight for headings.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
a {
  color: inherit;
  text-decoration: inherit;
}
/*
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}
/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: "IBM Plex Mono", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}
/*
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}
/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}
/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}
/*
Remove the inheritance of text transform in Edge and Firefox.
*/
button,
select {
  text-transform: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}
/*
Use the modern Firefox focus style for all focusable elements.
*/
:-moz-focusring {
  outline: auto;
}
/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
:-moz-ui-invalid {
  box-shadow: none;
}
/*
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}
/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}
/*
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}
/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}
/*
Removes the default spacing and border for appropriate elements.
*/
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}
fieldset {
  margin: 0;
  padding: 0;
}
legend {
  padding: 0;
}
ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}
/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}
/*
Prevent resizing textareas horizontally by default.
*/
textarea {
  resize: vertical;
}
/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/
input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
/*
Set the default cursor for buttons.
*/
button,
[role="button"] {
  cursor: pointer;
}
/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}
/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}
/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
img,
video {
  max-width: 100%;
  height: auto;
}
/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}
:root,
  html[data-theme="light"] {
    --color-fill: 251, 254, 251;
    --color-text-base: 40, 39, 40;
    --color-accent: 0, 16, 17;
    --color-card: 230, 230, 230;
    --color-card-muted: 205, 205, 205;
    --color-border: 236, 233, 233;
    --color-selection-bg: var(--color-accent);
    --color-selection-text: 251, 254, 251;

    --codeblock-color-text: #414141;
    --codeblock-color-background: #ffffff;
    --codeblock-token-constant: #1976d2;
    --codeblock-token-string: #22863a;
    --codeblock-token-comment: #aaa;
    --codeblock-token-keyword: #d32f2f;
    --codeblock-token-parameter: #ff9800;
    --codeblock-token-function: #6f42c1;
    --codeblock-token-string-expression: #22863a;
    --codeblock-token-punctuation: #212121;
    --codeblock-token-link: #22863a;
  }
html[data-theme="dark"] {
    --color-fill: 0, 16, 17;
    --color-text-base: 230, 230, 230;
    --color-accent: 251, 254, 251;
    --color-card: 63, 75, 90;
    --color-card-muted: 89, 107, 129;
    --color-border: 59, 70, 85;

    --color-selection-bg: var(--color-accent);
    --color-selection-text: 0, 16, 17;

    --codeblock-color-text: #d4d4d4;
    --codeblock-color-background: #011627;
    --codeblock-token-constant: #79c0ff;
    --codeblock-token-string: #a5d6ff;
    --codeblock-token-comment: #8b949e;
    --codeblock-token-keyword: #ff7b72;
    --codeblock-token-parameter: #ffa657;
    --codeblock-token-function: #d2a8ff;
    --codeblock-token-string-expression: #a5d6ff;
    --codeblock-token-punctuation: #d4d4d4;
    --codeblock-token-link: #a5d6ff;
  }
body {
  display: flex;
  min-height: 100svh;
  flex-direction: column;
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-fill) / var(--tw-bg-opacity, 1));
  font-family: "IBM Plex Mono", monospace;
  --tw-text-opacity: 1;
  color: rgb(var(--color-text-base) / var(--tw-text-opacity, 1));
}
body *::-moz-selection {
  background-color: rgb(var(--color-accent) / 0.7);
  --tw-text-opacity: 1;
  color: rgb(var(--color-fill) / var(--tw-text-opacity, 1));
}
body *::selection {
  background-color: rgb(var(--color-accent) / 0.7);
  --tw-text-opacity: 1;
  color: rgb(var(--color-fill) / var(--tw-text-opacity, 1));
}
body::-moz-selection {
  background-color: rgb(var(--color-accent) / 0.7);
  --tw-text-opacity: 1;
  color: rgb(var(--color-fill) / var(--tw-text-opacity, 1));
}
body::selection {
  background-color: rgb(var(--color-accent) / 0.7);
  --tw-text-opacity: 1;
  color: rgb(var(--color-fill) / var(--tw-text-opacity, 1));
}
body {
    background-color: rgb(var(--color-fill));
    color: rgb(var(--color-text-base));
    font-family: "IBM Plex Mono", monospace !important;
  }
html[data-theme="dark"] body {
    color: rgb(var(--color-text-base));
  }
html {
  overflow-y: scroll;
  scroll-behavior: smooth;
}
a {
  overflow-wrap: break-word !important;
  text-decoration-style: solid !important;
  text-underline-offset: 8px !important;
  outline-width: 2px !important;
  outline-offset: 1px !important;
}
a:focus-visible {
  text-decoration-line: none !important;
  outline-style: dashed !important;
}
a {
    color: rgb(var(--color-text-base));
    outline-color: rgb(var(--color-fill));
  }
a:hover {
    color: rgb(var(--color-accent));
  }
svg {
  display: inline-block;
  height: 1.5rem;
  width: 1.5rem;
}
.group:hover svg {
  fill: rgb(var(--color-accent) / 1);
}
::-webkit-scrollbar {
  width: 0.75rem;
}
::-webkit-scrollbar-track {
    background-color: rgb(var(--color-fill));
  }
::-webkit-scrollbar-thumb {
    background-color: rgb(var(--color-card));
  }
::-webkit-scrollbar-thumb:hover {
    background-color: rgb(var(--color-card-muted));
  }
::-moz-selection {
    background-color: rgba(var(--color-selection-bg), 0.7);
    color: rgb(var(--color-selection-text));
  }
::selection {
    background-color: rgba(var(--color-selection-bg), 0.7);
    color: rgb(var(--color-selection-text));
  }
::-moz-selection {
    background-color: rgba(var(--color-selection-bg), 0.7);
    color: rgb(var(--color-selection-text));
  }
/* Theme toggle icons */
#sun-svg,
  html[data-theme="dark"] #moon-svg {
    display: none;
    fill: rgb(var(--color-text-base));
  }
#moon-svg,
  html[data-theme="dark"] #sun-svg {
    display: block;
    fill: rgb(var(--color-text-base));
  }
.separator-line {
    border-color: rgba(var(--color-border), 1);
  }
.focus-outline {
    outline-color: rgb(var(--color-fill));
  }
#main-content h1 {
  font-size: 1.5rem;
  line-height: 2rem;
  font-weight: 600;
}
@media (min-width: 640px) {
  #main-content h1 {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
}
#main-content p {
  margin-bottom: 1.5rem;
  margin-top: 0.5rem;
}
html[data-theme="dark"] .prose,
  html[data-theme="dark"] .prose h1,
  html[data-theme="dark"] .prose h2,
  html[data-theme="dark"] .prose h3,
  html[data-theme="dark"] .prose h4,
  html[data-theme="dark"] .prose p,
  html[data-theme="dark"] .prose strong,
  html[data-theme="dark"] .prose li,
  html[data-theme="dark"] .prose a:not(:hover) {
    color: rgb(var(--color-text-base));
  }
li::marker {
    color: rgb(var(--color-text-base)) !important;
  }
.nav-container {
  margin-left: auto;
  margin-right: auto;
  display: flex;
  max-width: 58rem;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
}
@media (min-width: 640px) {
  .nav-container {
    flex-direction: row;
  }
}
.top-nav-wrap {
  position: relative;
  display: flex;
  width: 100%;
  align-items: flex-start;
  justify-content: space-between;
  padding: 1rem;
}
@media (min-width: 640px) {
  .top-nav-wrap {
    align-items: center;
    padding-top: 2rem;
    padding-bottom: 2rem;
  }
}
.logo {
  position: absolute;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 1.25rem;
  line-height: 1.75rem;
  font-weight: 600;
}
@media (min-width: 640px) {
  .logo {
    position: static;
    font-size: 1.5rem;
    line-height: 2rem;
  }
}
nav {
  display: flex;
  width: 100%;
  flex-direction: column;
  align-items: center;
}
@media (min-width: 640px) {
  nav {
    margin-left: 0.5rem;
    flex-direction: row;
    justify-content: flex-end;
  }
  nav > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1rem * var(--tw-space-x-reverse));
    margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
  }
  nav {
    padding-top: 0px;
    padding-bottom: 0px;
  }
}
nav ul {
  margin-top: 1rem;
  display: grid;
  width: 11rem;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  grid-template-rows: repeat(4, minmax(0, 1fr));
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
  row-gap: 0.5rem;
}
@media (min-width: 640px) {
  nav ul {
    margin-left: 0px;
    margin-top: 0px;
    width: auto;
    -moz-column-gap: 1.25rem;
         column-gap: 1.25rem;
    row-gap: 0px;
  }
}
nav ul li {
  grid-column: span 2 / span 2;
  display: flex;
  align-items: center;
  justify-content: center;
}
nav ul li a {
  width: 100%;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  text-align: center;
  font-weight: 500;
}
nav ul li a:hover {
  --tw-text-opacity: 1;
  color: rgb(var(--color-accent) / var(--tw-text-opacity, 1));
}
@media (min-width: 640px) {
  nav ul li a {
    margin-top: 0px;
    margin-bottom: 0px;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
  }
}
nav ul li:nth-last-child(2) a {
  width: auto;
}
nav ul li:nth-last-child(1),
  nav ul li:nth-last-child(2) {
  grid-column: span 1 / span 1;
}
nav button {
  padding: 0.25rem;
}
nav button svg {
  height: 1.5rem;
  width: 1.5rem;
  fill: rgb(var(--color-text-base) / 1);
}
nav button svg:hover {
  fill: rgb(var(--color-accent) / 1);
}
.hamburger-menu {
  align-self: flex-end;
  padding: 0.5rem;
}
@media (min-width: 640px) {
  .hamburger-menu {
    display: none;
  }
}
.hamburger-menu svg {
  height: 1.5rem;
  width: 1.5rem;
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  fill: rgb(var(--color-text-base) / 1);
}
#theme-btn {
  padding: 0.75rem;
}
@media (min-width: 640px) {
  #theme-btn {
    padding: 0.25rem;
  }
}
#theme-btn svg {
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#theme-btn svg:hover {
  --tw-rotate: 12deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@media (min-width: 640px) {
  #theme-btn svg {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}
.link-button {
  padding: 0.5rem;
}
.link-button:hover {
  --tw-rotate: 6deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@media (min-width: 640px) {
  .link-button {
    padding: 0.25rem;
  }
}
.link-button svg {
    fill: rgb(var(--color-text-base));
  }
.link-button:hover svg {
    fill: rgb(var(--color-text-base));
  }
pre:has(code) {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-border) / var(--tw-border-opacity, 1));
}
code,
  blockquote {
    word-wrap: break-word;
  }
pre > code {
    white-space: pre;
  }
code.language-plaintext {
    border-radius: 0.25rem;
    background-color: rgba(var(--color-card), 0.75);
    padding: 0.25rem;
    color: rgb(var(--color-text-base));
  }
details {
    padding-top: 1em;
  }
summary {
    cursor: pointer;
  }
#main-content {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  max-width: 58rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-bottom: 1rem;
}
section,
  footer {
  margin-left: auto;
  margin-right: auto;
  max-width: 58rem;
  padding-left: 1rem;
  padding-right: 1rem;
}
footer {
  margin-bottom: 2rem;
  width: 100%;
}
.footer-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}
@media (min-width: 640px) {
  .footer-wrapper {
    flex-direction: row-reverse;
    padding-top: 1rem;
    padding-bottom: 1rem;
  }
}
.social-icons {
  flex-wrap: wrap;
  justify-content: center;
  gap: 0.25rem;
}
.prose {
  color: var(--tw-prose-body);
  max-width: 100%;
}
.prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}
.prose :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.prose :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}
.prose :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}
.prose :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.prose :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
}
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}
.prose :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}
.prose :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "`";
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: "`";
}
.prose :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}
.prose :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: none;
}
.prose :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: baseline;
}
.prose :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.prose :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: top;
}
.prose :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  text-align: start;
}
.prose :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.prose :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.prose :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}
.prose :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}
.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}
.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}
.prose :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}
.menu-icon line {
  transition-property: opacity;
  transition-duration: 75ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.menu-icon .close {
    opacity: 0;
  }
.menu-icon.is-active .line {
  opacity: 0;
}
.menu-icon.is-active .close {
  opacity: 1;
}
.display-none {
  display: none;
}
.focus-outline {
  outline-width: 2px;
  outline-offset: 1px;
}
.focus-outline:focus-visible {
  text-decoration-line: none;
  outline-style: dashed;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.mt-12 {
  margin-top: 3rem;
}
.mt-auto {
  margin-top: auto;
}
.inline-block {
  display: inline-block;
}
.flex {
  display: flex;
}
.max-w-app {
  max-width: 58rem;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.px-0 {
  padding-left: 0px;
  padding-right: 0px;
}
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.capitalize {
  text-transform: capitalize;
}
:target {
    scroll-margin-block: 1rem;
  }
@media (min-width: 640px) {
  .sm\:flex {
    display: flex;
  }
}